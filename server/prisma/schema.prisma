// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  name       String
  joinedDate DateTime  @default(now())
  stores     Store[]
}

model Store {
  id            Int          @id @default(autoincrement())
  name          String
  storeCode     String       @unique
  token         String
  tokenExpiredIn DateTime
  idTiktokShop  String       @unique
  userId        Int
  user          User         @relation(fields: [userId], references: [id])
  marketplaceId Int
  marketplace   Marketplace  @relation(fields: [marketplaceId], references: [id])
  products      Product[]
  orders        Order[]
  warehouses    Warehouse[]
  subscription  Subscription?
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  price       Float
  accountId   Int
  account     Store   @relation(fields: [accountId], references: [id])
}

model Order {
  id          Int       @id @default(autoincrement())
  trackingId  String
  status      String
  storeId   Int
  account     Store   @relation(fields: [storeId], references: [id])
}

model Warehouse {
  id        Int       @id @default(autoincrement())
  name      String
  address   String
  storeId   Int
  store     Store     @relation(fields: [storeId], references: [id])
}

model Subscription {
  id          Int       @id @default(autoincrement())
  storeId     Int @unique
  store       Store     @relation(fields: [storeId], references: [id])
  startDate   DateTime
  endDate     DateTime?
  amount      Float     @default(5.0)
}

model Marketplace {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  stores    Store[]
}
